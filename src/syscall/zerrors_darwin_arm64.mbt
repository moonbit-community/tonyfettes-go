///|
pub const AF_APPLETALK = 0x10

///|
pub const AF_CCITT = 0xa

///|
pub const AF_CHAOS = 0x5

///|
pub const AF_CNT = 0x15

///|
pub const AF_COIP = 0x14

///|
pub const AF_DATAKIT = 0x9

///|
pub const AF_DECnet = 0xc

///|
pub const AF_DLI = 0xd

///|
pub const AF_E164 = 0x1c

///|
pub const AF_ECMA = 0x8

///|
pub const AF_HYLINK = 0xf

///|
pub const AF_IEEE80211 = 0x25

///|
pub const AF_IMPLINK = 0x3

///|
pub const AF_INET = 0x2

///|
pub const AF_INET6 = 0x1e

///|
pub const AF_IPX = 0x17

///|
pub const AF_ISDN = 0x1c

///|
pub const AF_ISO = 0x7

///|
pub const AF_LAT = 0xe

///|
pub const AF_LINK = 0x12

///|
pub const AF_LOCAL = 0x1

///|
pub const AF_MAX = 0x28

///|
pub const AF_NATM = 0x1f

///|
pub const AF_NDRV = 0x1b

///|
pub const AF_NETBIOS = 0x21

///|
pub const AF_NS = 0x6

///|
pub const AF_OSI = 0x7

///|
pub const AF_PPP = 0x22

///|
pub const AF_PUP = 0x4

///|
pub const AF_RESERVED_36 = 0x24

///|
pub const AF_ROUTE = 0x11

///|
pub const AF_SIP = 0x18

///|
pub const AF_SNA = 0xb

///|
pub const AF_SYSTEM = 0x20

///|
pub const AF_UNIX = 0x1

///|
pub const AF_UNSPEC = 0x0

///|
pub const AF_UTUN = 0x26

///|
pub const B0 = 0x0

///|
pub const B110 = 0x6e

///|
pub const B115200 = 0x1c200

///|
pub const B1200 = 0x4b0

///|
pub const B134 = 0x86

///|
pub const B14400 = 0x3840

///|
pub const B150 = 0x96

///|
pub const B1800 = 0x708

///|
pub const B19200 = 0x4b00

///|
pub const B200 = 0xc8

///|
pub const B230400 = 0x38400

///|
pub const B2400 = 0x960

///|
pub const B28800 = 0x7080

///|
pub const B300 = 0x12c

///|
pub const B38400 = 0x9600

///|
pub const B4800 = 0x12c0

///|
pub const B50 = 0x32

///|
pub const B57600 = 0xe100

///|
pub const B600 = 0x258

///|
pub const B7200 = 0x1c20

///|
pub const B75 = 0x4b

///|
pub const B76800 = 0x12c00

///|
pub const B9600 = 0x2580

///|
pub const BIOCFLUSH = 0x20004268

///|
pub const BIOCGBLEN = 0x40044266

///|
pub const BIOCGDLT = 0x4004426a

///|
pub const BIOCGDLTLIST = 0xc00c4279

///|
pub const BIOCGETIF = 0x4020426b

///|
pub const BIOCGHDRCMPLT = 0x40044274

///|
pub const BIOCGRSIG = 0x40044272

///|
pub const BIOCGRTIMEOUT = 0x4010426e

///|
pub const BIOCGSEESENT = 0x40044276

///|
pub const BIOCGSTATS = 0x4008426f

///|
pub const BIOCIMMEDIATE = 0x80044270

///|
pub const BIOCPROMISC = 0x20004269

///|
pub const BIOCSBLEN = 0xc0044266

///|
pub const BIOCSDLT = 0x80044278

///|
pub const BIOCSETF = 0x80104267

///|
pub const BIOCSETIF = 0x8020426c

///|
pub const BIOCSHDRCMPLT = 0x80044275

///|
pub const BIOCSRSIG = 0x80044273

///|
pub const BIOCSRTIMEOUT = 0x8010426d

///|
pub const BIOCSSEESENT = 0x80044277

///|
pub const BIOCVERSION = 0x40044271

///|
pub const BPF_A = 0x10

///|
pub const BPF_ABS = 0x20

///|
pub const BPF_ADD = 0x0

///|
pub const BPF_ALIGNMENT = 0x4

///|
pub const BPF_ALU = 0x4

///|
pub const BPF_AND = 0x50

///|
pub const BPF_B = 0x10

///|
pub const BPF_DIV = 0x30

///|
pub const BPF_H = 0x8

///|
pub const BPF_IMM = 0x0

///|
pub const BPF_IND = 0x40

///|
pub const BPF_JA = 0x0

///|
pub const BPF_JEQ = 0x10

///|
pub const BPF_JGE = 0x30

///|
pub const BPF_JGT = 0x20

///|
pub const BPF_JMP = 0x5

///|
pub const BPF_JSET = 0x40

///|
pub const BPF_K = 0x0

///|
pub const BPF_LD = 0x0

///|
pub const BPF_LDX = 0x1

///|
pub const BPF_LEN = 0x80

///|
pub const BPF_LSH = 0x60

///|
pub const BPF_MAJOR_VERSION = 0x1

///|
pub const BPF_MAXBUFSIZE = 0x80000

///|
pub const BPF_MAXINSNS = 0x200

///|
pub const BPF_MEM = 0x60

///|
pub const BPF_MEMWORDS = 0x10

///|
pub const BPF_MINBUFSIZE = 0x20

///|
pub const BPF_MINOR_VERSION = 0x1

///|
pub const BPF_MISC = 0x7

///|
pub const BPF_MSH = 0xa0

///|
pub const BPF_MUL = 0x20

///|
pub const BPF_NEG = 0x80

///|
pub const BPF_OR = 0x40

///|
pub const BPF_RELEASE = 0x30bb6

///|
pub const BPF_RET = 0x6

///|
pub const BPF_RSH = 0x70

///|
pub const BPF_ST = 0x2

///|
pub const BPF_STX = 0x3

///|
pub const BPF_SUB = 0x10

///|
pub const BPF_TAX = 0x0

///|
pub const BPF_TXA = 0x80

///|
pub const BPF_W = 0x0

///|
pub const BPF_X = 0x8

///|
pub const BRKINT = 0x2

///|
pub const CFLUSH = 0xf

///|
pub const CLOCAL = 0x8000

///|
pub const CREAD = 0x800

///|
pub const CS5 = 0x0

///|
pub const CS6 = 0x100

///|
pub const CS7 = 0x200

///|
pub const CS8 = 0x300

///|
pub const CSIZE = 0x300

///|
pub const CSTART = 0x11

///|
pub const CSTATUS = 0x14

///|
pub const CSTOP = 0x13

///|
pub const CSTOPB = 0x400

///|
pub const CSUSP = 0x1a

///|
pub const CTL_MAXNAME = 0xc

///|
pub const CTL_NET = 0x4

///|
pub const DLT_APPLE_IP_OVER_IEEE1394 = 0x8a

///|
pub const DLT_ARCNET = 0x7

///|
pub const DLT_ATM_CLIP = 0x13

///|
pub const DLT_ATM_RFC1483 = 0xb

///|
pub const DLT_AX25 = 0x3

///|
pub const DLT_CHAOS = 0x5

///|
pub const DLT_CHDLC = 0x68

///|
pub const DLT_C_HDLC = 0x68

///|
pub const DLT_EN10MB = 0x1

///|
pub const DLT_EN3MB = 0x2

///|
pub const DLT_FDDI = 0xa

///|
pub const DLT_IEEE802 = 0x6

///|
pub const DLT_IEEE802_11 = 0x69

///|
pub const DLT_IEEE802_11_RADIO = 0x7f

///|
pub const DLT_IEEE802_11_RADIO_AVS = 0xa3

///|
pub const DLT_LINUX_SLL = 0x71

///|
pub const DLT_LOOP = 0x6c

///|
pub const DLT_NULL = 0x0

///|
pub const DLT_PFLOG = 0x75

///|
pub const DLT_PFSYNC = 0x12

///|
pub const DLT_PPP = 0x9

///|
pub const DLT_PPP_BSDOS = 0x10

///|
pub const DLT_PPP_SERIAL = 0x32

///|
pub const DLT_PRONET = 0x4

///|
pub const DLT_RAW = 0xc

///|
pub const DLT_SLIP = 0x8

///|
pub const DLT_SLIP_BSDOS = 0xf

///|
pub const DT_BLK = 0x6

///|
pub const DT_CHR = 0x2

///|
pub const DT_DIR = 0x4

///|
pub const DT_FIFO = 0x1

///|
pub const DT_LNK = 0xa

///|
pub const DT_REG = 0x8

///|
pub const DT_SOCK = 0xc

///|
pub const DT_UNKNOWN = 0x0

///|
pub const DT_WHT = 0xe

///|
pub const ECHO = 0x8

///|
pub const ECHOCTL = 0x40

///|
pub const ECHOE = 0x2

///|
pub const ECHOK = 0x4

///|
pub const ECHOKE = 0x1

///|
pub const ECHONL = 0x10

///|
pub const ECHOPRT = 0x20

///|
pub const EVFILT_AIO = -0x3

///|
pub const EVFILT_FS = -0x9

///|
pub const EVFILT_MACHPORT = -0x8

///|
pub const EVFILT_PROC = -0x5

///|
pub const EVFILT_READ = -0x1

///|
pub const EVFILT_SIGNAL = -0x6

///|
pub const EVFILT_SYSCOUNT = 0xe

///|
pub const EVFILT_THREADMARKER = 0xe

///|
pub const EVFILT_TIMER = -0x7

///|
pub const EVFILT_USER = -0xa

///|
pub const EVFILT_VM = -0xc

///|
pub const EVFILT_VNODE = -0x4

///|
pub const EVFILT_WRITE = -0x2

///|
pub const EV_ADD = 0x1

///|
pub const EV_CLEAR = 0x20

///|
pub const EV_DELETE = 0x2

///|
pub const EV_DISABLE = 0x8

///|
pub const EV_DISPATCH = 0x80

///|
pub const EV_ENABLE = 0x4

///|
pub const EV_EOF = 0x8000

///|
pub const EV_ERROR = 0x4000

///|
pub const EV_FLAG0 = 0x1000

///|
pub const EV_FLAG1 = 0x2000

///|
pub const EV_ONESHOT = 0x10

///|
pub const EV_OOBAND = 0x2000

///|
pub const EV_POLL = 0x1000

///|
pub const EV_RECEIPT = 0x40

///|
pub const EV_SYSFLAGS = 0xf000

///|
pub const EXTA = 0x4b00

///|
pub const EXTB = 0x9600

///|
pub const EXTPROC = 0x800

///|
pub const FD_CLOEXEC = 0x1

///|
pub const FD_SETSIZE = 0x400

///|
pub const FLUSHO = 0x800000

///|
pub const F_ADDFILESIGS = 0x3d

///|
pub const F_ADDSIGS = 0x3b

///|
pub const F_ALLOCATEALL = 0x4

///|
pub const F_ALLOCATECONTIG = 0x2

///|
pub const F_CHKCLEAN = 0x29

///|
pub const F_DUPFD = 0x0

///|
pub const F_DUPFD_CLOEXEC = 0x43

///|
pub const F_FINDSIGS = 0x4e

///|
pub const F_FLUSH_DATA = 0x28

///|
pub const F_FREEZE_FS = 0x35

///|
pub const F_FULLFSYNC = 0x33

///|
pub const F_GETCODEDIR = 0x48

///|
pub const F_GETFD = 0x1

///|
pub const F_GETFL = 0x3

///|
pub const F_GETLK = 0x7

///|
pub const F_GETLKPID = 0x42

///|
pub const F_GETNOSIGPIPE = 0x4a

///|
pub const F_GETOWN = 0x5

///|
pub const F_GETPATH = 0x32

///|
pub const F_GETPATH_MTMINFO = 0x47

///|
pub const F_GETPROTECTIONCLASS = 0x3f

///|
pub const F_GETPROTECTIONLEVEL = 0x4d

///|
pub const F_GLOBAL_NOCACHE = 0x37

///|
pub const F_LOG2PHYS = 0x31

///|
pub const F_LOG2PHYS_EXT = 0x41

///|
pub const F_NOCACHE = 0x30

///|
pub const F_NODIRECT = 0x3e

///|
pub const F_OK = 0x0

///|
pub const F_PATHPKG_CHECK = 0x34

///|
pub const F_PEOFPOSMODE = 0x3

///|
pub const F_PREALLOCATE = 0x2a

///|
pub const F_RDADVISE = 0x2c

///|
pub const F_RDAHEAD = 0x2d

///|
pub const F_RDLCK = 0x1

///|
pub const F_SETBACKINGSTORE = 0x46

///|
pub const F_SETFD = 0x2

///|
pub const F_SETFL = 0x4

///|
pub const F_SETLK = 0x8

///|
pub const F_SETLKW = 0x9

///|
pub const F_SETLKWTIMEOUT = 0xa

///|
pub const F_SETNOSIGPIPE = 0x49

///|
pub const F_SETOWN = 0x6

///|
pub const F_SETPROTECTIONCLASS = 0x40

///|
pub const F_SETSIZE = 0x2b

///|
pub const F_SINGLE_WRITER = 0x4c

///|
pub const F_THAW_FS = 0x36

///|
pub const F_TRANSCODEKEY = 0x4b

///|
pub const F_UNLCK = 0x2

///|
pub const F_VOLPOSMODE = 0x4

///|
pub const F_WRLCK = 0x3

///|
pub const HUPCL = 0x4000

///|
pub const ICANON = 0x100

///|
pub const ICMP6_FILTER = 0x12

///|
pub const ICRNL = 0x100

///|
pub const IEXTEN = 0x400

///|
pub const IFF_ALLMULTI = 0x200

///|
pub const IFF_ALTPHYS = 0x4000

///|
pub const IFF_BROADCAST = 0x2

///|
pub const IFF_DEBUG = 0x4

///|
pub const IFF_LINK0 = 0x1000

///|
pub const IFF_LINK1 = 0x2000

///|
pub const IFF_LINK2 = 0x4000

///|
pub const IFF_LOOPBACK = 0x8

///|
pub const IFF_MULTICAST = 0x8000

///|
pub const IFF_NOARP = 0x80

///|
pub const IFF_NOTRAILERS = 0x20

///|
pub const IFF_OACTIVE = 0x400

///|
pub const IFF_POINTOPOINT = 0x10

///|
pub const IFF_PROMISC = 0x100

///|
pub const IFF_RUNNING = 0x40

///|
pub const IFF_SIMPLEX = 0x800

///|
pub const IFF_UP = 0x1

///|
pub const IFNAMSIZ = 0x10

///|
pub const IFT_1822 = 0x2

///|
pub const IFT_AAL5 = 0x31

///|
pub const IFT_ARCNET = 0x23

///|
pub const IFT_ARCNETPLUS = 0x24

///|
pub const IFT_ATM = 0x25

///|
pub const IFT_BRIDGE = 0xd1

///|
pub const IFT_CARP = 0xf8

///|
pub const IFT_CELLULAR = 0xff

///|
pub const IFT_CEPT = 0x13

///|
pub const IFT_DS3 = 0x1e

///|
pub const IFT_ENC = 0xf4

///|
pub const IFT_EON = 0x19

///|
pub const IFT_ETHER = 0x6

///|
pub const IFT_FAITH = 0x38

///|
pub const IFT_FDDI = 0xf

///|
pub const IFT_FRELAY = 0x20

///|
pub const IFT_FRELAYDCE = 0x2c

///|
pub const IFT_GIF = 0x37

///|
pub const IFT_HDH1822 = 0x3

///|
pub const IFT_HIPPI = 0x2f

///|
pub const IFT_HSSI = 0x2e

///|
pub const IFT_HY = 0xe

///|
pub const IFT_IEEE1394 = 0x90

///|
pub const IFT_IEEE8023ADLAG = 0x88

///|
pub const IFT_ISDNBASIC = 0x14

///|
pub const IFT_ISDNPRIMARY = 0x15

///|
pub const IFT_ISO88022LLC = 0x29

///|
pub const IFT_ISO88023 = 0x7

///|
pub const IFT_ISO88024 = 0x8

///|
pub const IFT_ISO88025 = 0x9

///|
pub const IFT_ISO88026 = 0xa

///|
pub const IFT_L2VLAN = 0x87

///|
pub const IFT_LAPB = 0x10

///|
pub const IFT_LOCALTALK = 0x2a

///|
pub const IFT_LOOP = 0x18

///|
pub const IFT_MIOX25 = 0x26

///|
pub const IFT_MODEM = 0x30

///|
pub const IFT_NSIP = 0x1b

///|
pub const IFT_OTHER = 0x1

///|
pub const IFT_P10 = 0xc

///|
pub const IFT_P80 = 0xd

///|
pub const IFT_PARA = 0x22

///|
pub const IFT_PDP = 0xff

///|
pub const IFT_PFLOG = 0xf5

///|
pub const IFT_PFSYNC = 0xf6

///|
pub const IFT_PPP = 0x17

///|
pub const IFT_PROPMUX = 0x36

///|
pub const IFT_PROPVIRTUAL = 0x35

///|
pub const IFT_PTPSERIAL = 0x16

///|
pub const IFT_RS232 = 0x21

///|
pub const IFT_SDLC = 0x11

///|
pub const IFT_SIP = 0x1f

///|
pub const IFT_SLIP = 0x1c

///|
pub const IFT_SMDSDXI = 0x2b

///|
pub const IFT_SMDSICIP = 0x34

///|
pub const IFT_SONET = 0x27

///|
pub const IFT_SONETPATH = 0x32

///|
pub const IFT_SONETVT = 0x33

///|
pub const IFT_STARLAN = 0xb

///|
pub const IFT_STF = 0x39

///|
pub const IFT_T1 = 0x12

///|
pub const IFT_ULTRA = 0x1d

///|
pub const IFT_V35 = 0x2d

///|
pub const IFT_X25 = 0x5

///|
pub const IFT_X25DDN = 0x4

///|
pub const IFT_X25PLE = 0x28

///|
pub const IFT_XETHER = 0x1a

///|
pub const IGNBRK = 0x1

///|
pub const IGNCR = 0x80

///|
pub const IGNPAR = 0x4

///|
pub const IMAXBEL = 0x2000

///|
pub const INLCR = 0x40

///|
pub const INPCK = 0x10

///|
pub const IN_CLASSA_HOST = 0xffffff

///|
pub const IN_CLASSA_MAX = 0x80

///|
pub const IN_CLASSA_NET = 0xff000000

///|
pub const IN_CLASSA_NSHIFT = 0x18

///|
pub const IN_CLASSB_HOST = 0xffff

///|
pub const IN_CLASSB_MAX = 0x10000

///|
pub const IN_CLASSB_NET = 0xffff0000

///|
pub const IN_CLASSB_NSHIFT = 0x10

///|
pub const IN_CLASSC_HOST = 0xff

///|
pub const IN_CLASSC_NET = 0xffffff00

///|
pub const IN_CLASSC_NSHIFT = 0x8

///|
pub const IN_CLASSD_HOST = 0xfffffff

///|
pub const IN_CLASSD_NET = 0xf0000000

///|
pub const IN_CLASSD_NSHIFT = 0x1c

///|
pub const IN_LINKLOCALNETNUM = 0xa9fe0000

///|
pub const IN_LOOPBACKNET = 0x7f

///|
pub const IPPROTO_3PC = 0x22

///|
pub const IPPROTO_ADFS = 0x44

///|
pub const IPPROTO_AH = 0x33

///|
pub const IPPROTO_AHIP = 0x3d

///|
pub const IPPROTO_APES = 0x63

///|
pub const IPPROTO_ARGUS = 0xd

///|
pub const IPPROTO_AX25 = 0x5d

///|
pub const IPPROTO_BHA = 0x31

///|
pub const IPPROTO_BLT = 0x1e

///|
pub const IPPROTO_BRSATMON = 0x4c

///|
pub const IPPROTO_CFTP = 0x3e

///|
pub const IPPROTO_CHAOS = 0x10

///|
pub const IPPROTO_CMTP = 0x26

///|
pub const IPPROTO_CPHB = 0x49

///|
pub const IPPROTO_CPNX = 0x48

///|
pub const IPPROTO_DDP = 0x25

///|
pub const IPPROTO_DGP = 0x56

///|
pub const IPPROTO_DIVERT = 0xfe

///|
pub const IPPROTO_DONE = 0x101

///|
pub const IPPROTO_DSTOPTS = 0x3c

///|
pub const IPPROTO_EGP = 0x8

///|
pub const IPPROTO_EMCON = 0xe

///|
pub const IPPROTO_ENCAP = 0x62

///|
pub const IPPROTO_EON = 0x50

///|
pub const IPPROTO_ESP = 0x32

///|
pub const IPPROTO_ETHERIP = 0x61

///|
pub const IPPROTO_FRAGMENT = 0x2c

///|
pub const IPPROTO_GGP = 0x3

///|
pub const IPPROTO_GMTP = 0x64

///|
pub const IPPROTO_GRE = 0x2f

///|
pub const IPPROTO_HELLO = 0x3f

///|
pub const IPPROTO_HMP = 0x14

///|
pub const IPPROTO_HOPOPTS = 0x0

///|
pub const IPPROTO_ICMP = 0x1

///|
pub const IPPROTO_ICMPV6 = 0x3a

///|
pub const IPPROTO_IDP = 0x16

///|
pub const IPPROTO_IDPR = 0x23

///|
pub const IPPROTO_IDRP = 0x2d

///|
pub const IPPROTO_IGMP = 0x2

///|
pub const IPPROTO_IGP = 0x55

///|
pub const IPPROTO_IGRP = 0x58

///|
pub const IPPROTO_IL = 0x28

///|
pub const IPPROTO_INLSP = 0x34

///|
pub const IPPROTO_INP = 0x20

///|
pub const IPPROTO_IP = 0x0

///|
pub const IPPROTO_IPCOMP = 0x6c

///|
pub const IPPROTO_IPCV = 0x47

///|
pub const IPPROTO_IPEIP = 0x5e

///|
pub const IPPROTO_IPIP = 0x4

///|
pub const IPPROTO_IPPC = 0x43

///|
pub const IPPROTO_IPV4 = 0x4

///|
pub const IPPROTO_IPV6 = 0x29

///|
pub const IPPROTO_IRTP = 0x1c

///|
pub const IPPROTO_KRYPTOLAN = 0x41

///|
pub const IPPROTO_LARP = 0x5b

///|
pub const IPPROTO_LEAF1 = 0x19

///|
pub const IPPROTO_LEAF2 = 0x1a

///|
pub const IPPROTO_MAX = 0x100

///|
pub const IPPROTO_MAXID = 0x34

///|
pub const IPPROTO_MEAS = 0x13

///|
pub const IPPROTO_MHRP = 0x30

///|
pub const IPPROTO_MICP = 0x5f

///|
pub const IPPROTO_MTP = 0x5c

///|
pub const IPPROTO_MUX = 0x12

///|
pub const IPPROTO_ND = 0x4d

///|
pub const IPPROTO_NHRP = 0x36

///|
pub const IPPROTO_NONE = 0x3b

///|
pub const IPPROTO_NSP = 0x1f

///|
pub const IPPROTO_NVPII = 0xb

///|
pub const IPPROTO_OSPFIGP = 0x59

///|
pub const IPPROTO_PGM = 0x71

///|
pub const IPPROTO_PIGP = 0x9

///|
pub const IPPROTO_PIM = 0x67

///|
pub const IPPROTO_PRM = 0x15

///|
pub const IPPROTO_PUP = 0xc

///|
pub const IPPROTO_PVP = 0x4b

///|
pub const IPPROTO_RAW = 0xff

///|
pub const IPPROTO_RCCMON = 0xa

///|
pub const IPPROTO_RDP = 0x1b

///|
pub const IPPROTO_ROUTING = 0x2b

///|
pub const IPPROTO_RSVP = 0x2e

///|
pub const IPPROTO_RVD = 0x42

///|
pub const IPPROTO_SATEXPAK = 0x40

///|
pub const IPPROTO_SATMON = 0x45

///|
pub const IPPROTO_SCCSP = 0x60

///|
pub const IPPROTO_SCTP = 0x84

///|
pub const IPPROTO_SDRP = 0x2a

///|
pub const IPPROTO_SEP = 0x21

///|
pub const IPPROTO_SRPC = 0x5a

///|
pub const IPPROTO_ST = 0x7

///|
pub const IPPROTO_SVMTP = 0x52

///|
pub const IPPROTO_SWIPE = 0x35

///|
pub const IPPROTO_TCF = 0x57

///|
pub const IPPROTO_TCP = 0x6

///|
pub const IPPROTO_TP = 0x1d

///|
pub const IPPROTO_TPXX = 0x27

///|
pub const IPPROTO_TRUNK1 = 0x17

///|
pub const IPPROTO_TRUNK2 = 0x18

///|
pub const IPPROTO_TTP = 0x54

///|
pub const IPPROTO_UDP = 0x11

///|
pub const IPPROTO_VINES = 0x53

///|
pub const IPPROTO_VISA = 0x46

///|
pub const IPPROTO_VMTP = 0x51

///|
pub const IPPROTO_WBEXPAK = 0x4f

///|
pub const IPPROTO_WBMON = 0x4e

///|
pub const IPPROTO_WSN = 0x4a

///|
pub const IPPROTO_XNET = 0xf

///|
pub const IPPROTO_XTP = 0x24

///|
pub const IPV6_2292DSTOPTS = 0x17

///|
pub const IPV6_2292HOPLIMIT = 0x14

///|
pub const IPV6_2292HOPOPTS = 0x16

///|
pub const IPV6_2292NEXTHOP = 0x15

///|
pub const IPV6_2292PKTINFO = 0x13

///|
pub const IPV6_2292PKTOPTIONS = 0x19

///|
pub const IPV6_2292RTHDR = 0x18

///|
pub const IPV6_BINDV6ONLY = 0x1b

///|
pub const IPV6_BOUND_IF = 0x7d

///|
pub const IPV6_CHECKSUM = 0x1a

///|
pub const IPV6_DEFAULT_MULTICAST_HOPS = 0x1

///|
pub const IPV6_DEFAULT_MULTICAST_LOOP = 0x1

///|
pub const IPV6_DEFHLIM = 0x40

///|
pub const IPV6_FAITH = 0x1d

///|
pub const IPV6_FLOWINFO_MASK = 0xffffff0f

///|
pub const IPV6_FLOWLABEL_MASK = 0xffff0f00

///|
pub const IPV6_FRAGTTL = 0x78

///|
pub const IPV6_FW_ADD = 0x1e

///|
pub const IPV6_FW_DEL = 0x1f

///|
pub const IPV6_FW_FLUSH = 0x20

///|
pub const IPV6_FW_GET = 0x22

///|
pub const IPV6_FW_ZERO = 0x21

///|
pub const IPV6_HLIMDEC = 0x1

///|
pub const IPV6_IPSEC_POLICY = 0x1c

///|
pub const IPV6_JOIN_GROUP = 0xc

///|
pub const IPV6_LEAVE_GROUP = 0xd

///|
pub const IPV6_MAXHLIM = 0xff

///|
pub const IPV6_MAXOPTHDR = 0x800

///|
pub const IPV6_MAXPACKET = 0xffff

///|
pub const IPV6_MAX_GROUP_SRC_FILTER = 0x200

///|
pub const IPV6_MAX_MEMBERSHIPS = 0xfff

///|
pub const IPV6_MAX_SOCK_SRC_FILTER = 0x80

///|
pub const IPV6_MIN_MEMBERSHIPS = 0x1f

///|
pub const IPV6_MMTU = 0x500

///|
pub const IPV6_MULTICAST_HOPS = 0xa

///|
pub const IPV6_MULTICAST_IF = 0x9

///|
pub const IPV6_MULTICAST_LOOP = 0xb

///|
pub const IPV6_PORTRANGE = 0xe

///|
pub const IPV6_PORTRANGE_DEFAULT = 0x0

///|
pub const IPV6_PORTRANGE_HIGH = 0x1

///|
pub const IPV6_PORTRANGE_LOW = 0x2

///|
pub const IPV6_RECVTCLASS = 0x23

///|
pub const IPV6_RTHDR_LOOSE = 0x0

///|
pub const IPV6_RTHDR_STRICT = 0x1

///|
pub const IPV6_RTHDR_TYPE_0 = 0x0

///|
pub const IPV6_SOCKOPT_RESERVED1 = 0x3

///|
pub const IPV6_TCLASS = 0x24

///|
pub const IPV6_UNICAST_HOPS = 0x4

///|
pub const IPV6_V6ONLY = 0x1b

///|
pub const IPV6_VERSION = 0x60

///|
pub const IPV6_VERSION_MASK = 0xf0

///|
pub const IP_ADD_MEMBERSHIP = 0xc

///|
pub const IP_ADD_SOURCE_MEMBERSHIP = 0x46

///|
pub const IP_BLOCK_SOURCE = 0x48

///|
pub const IP_BOUND_IF = 0x19

///|
pub const IP_DEFAULT_MULTICAST_LOOP = 0x1

///|
pub const IP_DEFAULT_MULTICAST_TTL = 0x1

///|
pub const IP_DF = 0x4000

///|
pub const IP_DROP_MEMBERSHIP = 0xd

///|
pub const IP_DROP_SOURCE_MEMBERSHIP = 0x47

///|
pub const IP_DUMMYNET_CONFIGURE = 0x3c

///|
pub const IP_DUMMYNET_DEL = 0x3d

///|
pub const IP_DUMMYNET_FLUSH = 0x3e

///|
pub const IP_DUMMYNET_GET = 0x40

///|
pub const IP_FAITH = 0x16

///|
pub const IP_FW_ADD = 0x28

///|
pub const IP_FW_DEL = 0x29

///|
pub const IP_FW_FLUSH = 0x2a

///|
pub const IP_FW_GET = 0x2c

///|
pub const IP_FW_RESETLOG = 0x2d

///|
pub const IP_FW_ZERO = 0x2b

///|
pub const IP_HDRINCL = 0x2

///|
pub const IP_IPSEC_POLICY = 0x15

///|
pub const IP_MAXPACKET = 0xffff

///|
pub const IP_MAX_GROUP_SRC_FILTER = 0x200

///|
pub const IP_MAX_MEMBERSHIPS = 0xfff

///|
pub const IP_MAX_SOCK_MUTE_FILTER = 0x80

///|
pub const IP_MAX_SOCK_SRC_FILTER = 0x80

///|
pub const IP_MF = 0x2000

///|
pub const IP_MIN_MEMBERSHIPS = 0x1f

///|
pub const IP_MSFILTER = 0x4a

///|
pub const IP_MSS = 0x240

///|
pub const IP_MULTICAST_IF = 0x9

///|
pub const IP_MULTICAST_IFINDEX = 0x42

///|
pub const IP_MULTICAST_LOOP = 0xb

///|
pub const IP_MULTICAST_TTL = 0xa

///|
pub const IP_MULTICAST_VIF = 0xe

///|
pub const IP_NAT__XXX = 0x37

///|
pub const IP_OFFMASK = 0x1fff

///|
pub const IP_OLD_FW_ADD = 0x32

///|
pub const IP_OLD_FW_DEL = 0x33

///|
pub const IP_OLD_FW_FLUSH = 0x34

///|
pub const IP_OLD_FW_GET = 0x36

///|
pub const IP_OLD_FW_RESETLOG = 0x38

///|
pub const IP_OLD_FW_ZERO = 0x35

///|
pub const IP_OPTIONS = 0x1

///|
pub const IP_PKTINFO = 0x1a

///|
pub const IP_PORTRANGE = 0x13

///|
pub const IP_PORTRANGE_DEFAULT = 0x0

///|
pub const IP_PORTRANGE_HIGH = 0x1

///|
pub const IP_PORTRANGE_LOW = 0x2

///|
pub const IP_RECVDSTADDR = 0x7

///|
pub const IP_RECVIF = 0x14

///|
pub const IP_RECVOPTS = 0x5

///|
pub const IP_RECVPKTINFO = 0x1a

///|
pub const IP_RECVRETOPTS = 0x6

///|
pub const IP_RECVTTL = 0x18

///|
pub const IP_RETOPTS = 0x8

///|
pub const IP_RF = 0x8000

///|
pub const IP_RSVP_OFF = 0x10

///|
pub const IP_RSVP_ON = 0xf

///|
pub const IP_RSVP_VIF_OFF = 0x12

///|
pub const IP_RSVP_VIF_ON = 0x11

///|
pub const IP_STRIPHDR = 0x17

///|
pub const IP_TOS = 0x3

///|
pub const IP_TRAFFIC_MGT_BACKGROUND = 0x41

///|
pub const IP_TTL = 0x4

///|
pub const IP_UNBLOCK_SOURCE = 0x49

///|
pub const ISIG = 0x80

///|
pub const ISTRIP = 0x20

///|
pub const IUTF8 = 0x4000

///|
pub const IXANY = 0x800

///|
pub const IXOFF = 0x400

///|
pub const IXON = 0x200

///|
pub const LOCK_EX = 0x2

///|
pub const LOCK_NB = 0x4

///|
pub const LOCK_SH = 0x1

///|
pub const LOCK_UN = 0x8

///|
pub const MADV_CAN_REUSE = 0x9

///|
pub const MADV_DONTNEED = 0x4

///|
pub const MADV_FREE = 0x5

///|
pub const MADV_FREE_REUSABLE = 0x7

///|
pub const MADV_FREE_REUSE = 0x8

///|
pub const MADV_NORMAL = 0x0

///|
pub const MADV_RANDOM = 0x1

///|
pub const MADV_SEQUENTIAL = 0x2

///|
pub const MADV_WILLNEED = 0x3

///|
pub const MADV_ZERO_WIRED_PAGES = 0x6

///|
pub const MAP_ANON = 0x1000

///|
pub const MAP_COPY = 0x2

///|
pub const MAP_FILE = 0x0

///|
pub const MAP_FIXED = 0x10

///|
pub const MAP_HASSEMAPHORE = 0x200

///|
pub const MAP_JIT = 0x800

///|
pub const MAP_NOCACHE = 0x400

///|
pub const MAP_NOEXTEND = 0x100

///|
pub const MAP_NORESERVE = 0x40

///|
pub const MAP_PRIVATE = 0x2

///|
pub const MAP_RENAME = 0x20

///|
pub const MAP_RESERVED0080 = 0x80

///|
pub const MAP_SHARED = 0x1

///|
pub const MCL_CURRENT = 0x1

///|
pub const MCL_FUTURE = 0x2

///|
pub const MSG_CTRUNC = 0x20

///|
pub const MSG_DONTROUTE = 0x4

///|
pub const MSG_DONTWAIT = 0x80

///|
pub const MSG_EOF = 0x100

///|
pub const MSG_EOR = 0x8

///|
pub const MSG_FLUSH = 0x400

///|
pub const MSG_HAVEMORE = 0x2000

///|
pub const MSG_HOLD = 0x800

///|
pub const MSG_NEEDSA = 0x10000

///|
pub const MSG_OOB = 0x1

///|
pub const MSG_PEEK = 0x2

///|
pub const MSG_RCVMORE = 0x4000

///|
pub const MSG_SEND = 0x1000

///|
pub const MSG_TRUNC = 0x10

///|
pub const MSG_WAITALL = 0x40

///|
pub const MSG_WAITSTREAM = 0x200

///|
pub const MS_ASYNC = 0x1

///|
pub const MS_DEACTIVATE = 0x8

///|
pub const MS_INVALIDATE = 0x2

///|
pub const MS_KILLPAGES = 0x4

///|
pub const MS_SYNC = 0x10

///|
pub const NAME_MAX = 0xff

///|
pub const NET_RT_DUMP = 0x1

///|
pub const NET_RT_DUMP2 = 0x7

///|
pub const NET_RT_FLAGS = 0x2

///|
pub const NET_RT_IFLIST = 0x3

///|
pub const NET_RT_IFLIST2 = 0x6

///|
pub const NET_RT_MAXID = 0xa

///|
pub const NET_RT_STAT = 0x4

///|
pub const NET_RT_TRASH = 0x5

///|
pub const NOFLSH = 0x80000000

///|
pub const NOTE_ABSOLUTE = 0x8

///|
pub const NOTE_ATTRIB = 0x8

///|
pub const NOTE_BACKGROUND = 0x40

///|
pub const NOTE_CHILD = 0x4

///|
pub const NOTE_CRITICAL = 0x20

///|
pub const NOTE_DELETE = 0x1

///|
pub const NOTE_EXEC = 0x20000000

///|
pub const NOTE_EXIT = 0x80000000

///|
pub const NOTE_EXITSTATUS = 0x4000000

///|
pub const NOTE_EXIT_CSERROR = 0x40000

///|
pub const NOTE_EXIT_DECRYPTFAIL = 0x10000

///|
pub const NOTE_EXIT_DETAIL = 0x2000000

///|
pub const NOTE_EXIT_DETAIL_MASK = 0x70000

///|
pub const NOTE_EXIT_MEMORY = 0x20000

///|
pub const NOTE_EXIT_REPARENTED = 0x80000

///|
pub const NOTE_EXTEND = 0x4

///|
pub const NOTE_FFAND = 0x40000000

///|
pub const NOTE_FFCOPY = 0xc0000000

///|
pub const NOTE_FFCTRLMASK = 0xc0000000

///|
pub const NOTE_FFLAGSMASK = 0xffffff

///|
pub const NOTE_FFNOP = 0x0

///|
pub const NOTE_FFOR = 0x80000000

///|
pub const NOTE_FORK = 0x40000000

///|
pub const NOTE_LEEWAY = 0x10

///|
pub const NOTE_LINK = 0x10

///|
pub const NOTE_LOWAT = 0x1

///|
pub const NOTE_NONE = 0x80

///|
pub const NOTE_NSECONDS = 0x4

///|
pub const NOTE_PCTRLMASK = -0x100000

///|
pub const NOTE_PDATAMASK = 0xfffff

///|
pub const NOTE_REAP = 0x10000000

///|
pub const NOTE_RENAME = 0x20

///|
pub const NOTE_REVOKE = 0x40

///|
pub const NOTE_SECONDS = 0x1

///|
pub const NOTE_SIGNAL = 0x8000000

///|
pub const NOTE_TRACK = 0x1

///|
pub const NOTE_TRACKERR = 0x2

///|
pub const NOTE_TRIGGER = 0x1000000

///|
pub const NOTE_USECONDS = 0x2

///|
pub const NOTE_VM_ERROR = 0x10000000

///|
pub const NOTE_VM_PRESSURE = 0x80000000

///|
pub const NOTE_VM_PRESSURE_SUDDEN_TERMINATE = 0x20000000

///|
pub const NOTE_VM_PRESSURE_TERMINATE = 0x40000000

///|
pub const NOTE_WRITE = 0x2

///|
pub const OCRNL = 0x10

///|
pub const OFDEL = 0x20000

///|
pub const OFILL = 0x80

///|
pub const ONLCR = 0x2

///|
pub const ONLRET = 0x40

///|
pub const ONOCR = 0x20

///|
pub const ONOEOT = 0x8

///|
pub const OPOST = 0x1

///|
pub const O_ACCMODE = 0x3

///|
pub const O_ALERT = 0x20000000

///|
pub const O_APPEND = 0x8

///|
pub const O_ASYNC = 0x40

///|
pub const O_CLOEXEC = 0x1000000

///|
pub const O_CREAT = 0x200

///|
pub const O_DIRECTORY = 0x100000

///|
pub const O_DP_GETRAWENCRYPTED = 0x1

///|
pub const O_DSYNC = 0x400000

///|
pub const O_EVTONLY = 0x8000

///|
pub const O_EXCL = 0x800

///|
pub const O_EXLOCK = 0x20

///|
pub const O_FSYNC = 0x80

///|
pub const O_NDELAY = 0x4

///|
pub const O_NOCTTY = 0x20000

///|
pub const O_NOFOLLOW = 0x100

///|
pub const O_NONBLOCK = 0x4

///|
pub const O_POPUP = 0x80000000

///|
pub const O_RDONLY = 0x0

///|
pub const O_RDWR = 0x2

///|
pub const O_SHLOCK = 0x10

///|
pub const O_SYMLINK = 0x200000

///|
pub const O_SYNC = 0x80

///|
pub const O_TRUNC = 0x400

///|
pub const O_WRONLY = 0x1

///|
pub const PARENB = 0x1000

///|
pub const PARMRK = 0x8

///|
pub const PARODD = 0x2000

///|
pub const PENDIN = 0x20000000

///|
pub const PRIO_PGRP = 0x1

///|
pub const PRIO_PROCESS = 0x0

///|
pub const PRIO_USER = 0x2

///|
pub const PROT_EXEC = 0x4

///|
pub const PROT_NONE = 0x0

///|
pub const PROT_READ = 0x1

///|
pub const PROT_WRITE = 0x2

///|
pub const PT_ATTACH = 0xa

///|
pub const PT_ATTACHEXC = 0xe

///|
pub const PT_CONTINUE = 0x7

///|
pub const PT_DENY_ATTACH = 0x1f

///|
pub const PT_DETACH = 0xb

///|
pub const PT_FIRSTMACH = 0x20

///|
pub const PT_FORCEQUOTA = 0x1e

///|
pub const PT_KILL = 0x8

///|
pub const PT_READ_D = 0x2

///|
pub const PT_READ_I = 0x1

///|
pub const PT_READ_U = 0x3

///|
pub const PT_SIGEXC = 0xc

///|
pub const PT_STEP = 0x9

///|
pub const PT_THUPDATE = 0xd

///|
pub const PT_TRACE_ME = 0x0

///|
pub const PT_WRITE_D = 0x5

///|
pub const PT_WRITE_I = 0x4

///|
pub const PT_WRITE_U = 0x6

///|
pub const RLIMIT_AS = 0x5

///|
pub const RLIMIT_CORE = 0x4

///|
pub const RLIMIT_CPU = 0x0

///|
pub const RLIMIT_CPU_USAGE_MONITOR = 0x2

///|
pub const RLIMIT_DATA = 0x2

///|
pub const RLIMIT_FSIZE = 0x1

///|
pub const RLIMIT_NOFILE = 0x8

///|
pub const RLIMIT_STACK = 0x3

///|
pub const RLIM_INFINITY : Int64 = 0x7fffffffffffffff

///|
pub const RTAX_AUTHOR = 0x6

///|
pub const RTAX_BRD = 0x7

///|
pub const RTAX_DST = 0x0

///|
pub const RTAX_GATEWAY = 0x1

///|
pub const RTAX_GENMASK = 0x3

///|
pub const RTAX_IFA = 0x5

///|
pub const RTAX_IFP = 0x4

///|
pub const RTAX_MAX = 0x8

///|
pub const RTAX_NETMASK = 0x2

///|
pub const RTA_AUTHOR = 0x40

///|
pub const RTA_BRD = 0x80

///|
pub const RTA_DST = 0x1

///|
pub const RTA_GATEWAY = 0x2

///|
pub const RTA_GENMASK = 0x8

///|
pub const RTA_IFA = 0x20

///|
pub const RTA_IFP = 0x10

///|
pub const RTA_NETMASK = 0x4

///|
pub const RTF_BLACKHOLE = 0x1000

///|
pub const RTF_BROADCAST = 0x400000

///|
pub const RTF_CLONING = 0x100

///|
pub const RTF_CONDEMNED = 0x2000000

///|
pub const RTF_DELCLONE = 0x80

///|
pub const RTF_DONE = 0x40

///|
pub const RTF_DYNAMIC = 0x10

///|
pub const RTF_GATEWAY = 0x2

///|
pub const RTF_HOST = 0x4

///|
pub const RTF_IFREF = 0x4000000

///|
pub const RTF_IFSCOPE = 0x1000000

///|
pub const RTF_LLINFO = 0x400

///|
pub const RTF_LOCAL = 0x200000

///|
pub const RTF_MODIFIED = 0x20

///|
pub const RTF_MULTICAST = 0x800000

///|
pub const RTF_PINNED = 0x100000

///|
pub const RTF_PRCLONING = 0x10000

///|
pub const RTF_PROTO1 = 0x8000

///|
pub const RTF_PROTO2 = 0x4000

///|
pub const RTF_PROTO3 = 0x40000

///|
pub const RTF_PROXY = 0x8000000

///|
pub const RTF_REJECT = 0x8

///|
pub const RTF_ROUTER = 0x10000000

///|
pub const RTF_STATIC = 0x800

///|
pub const RTF_UP = 0x1

///|
pub const RTF_WASCLONED = 0x20000

///|
pub const RTF_XRESOLVE = 0x200

///|
pub const RTM_ADD = 0x1

///|
pub const RTM_CHANGE = 0x3

///|
pub const RTM_DELADDR = 0xd

///|
pub const RTM_DELETE = 0x2

///|
pub const RTM_DELMADDR = 0x10

///|
pub const RTM_GET = 0x4

///|
pub const RTM_GET2 = 0x14

///|
pub const RTM_IFINFO = 0xe

///|
pub const RTM_IFINFO2 = 0x12

///|
pub const RTM_LOCK = 0x8

///|
pub const RTM_LOSING = 0x5

///|
pub const RTM_MISS = 0x7

///|
pub const RTM_NEWADDR = 0xc

///|
pub const RTM_NEWMADDR = 0xf

///|
pub const RTM_NEWMADDR2 = 0x13

///|
pub const RTM_OLDADD = 0x9

///|
pub const RTM_OLDDEL = 0xa

///|
pub const RTM_REDIRECT = 0x6

///|
pub const RTM_RESOLVE = 0xb

///|
pub const RTM_RTTUNIT = 0xf4240

///|
pub const RTM_VERSION = 0x5

///|
pub const RTV_EXPIRE = 0x4

///|
pub const RTV_HOPCOUNT = 0x2

///|
pub const RTV_MTU = 0x1

///|
pub const RTV_RPIPE = 0x8

///|
pub const RTV_RTT = 0x40

///|
pub const RTV_RTTVAR = 0x80

///|
pub const RTV_SPIPE = 0x10

///|
pub const RTV_SSTHRESH = 0x20

///|
pub const RUSAGE_CHILDREN = -0x1

///|
pub const RUSAGE_SELF = 0x0

///|
pub const SCM_CREDS = 0x3

///|
pub const SCM_RIGHTS = 0x1

///|
pub const SCM_TIMESTAMP = 0x2

///|
pub const SCM_TIMESTAMP_MONOTONIC = 0x4

///|
pub const SHUT_RD = 0x0

///|
pub const SHUT_RDWR = 0x2

///|
pub const SHUT_WR = 0x1

///|
pub const SIOCADDMULTI = 0x80206931

///|
pub const SIOCAIFADDR = 0x8040691a

///|
pub const SIOCARPIPLL = 0xc0206928

///|
pub const SIOCATMARK = 0x40047307

///|
pub const SIOCAUTOADDR = 0xc0206926

///|
pub const SIOCAUTONETMASK = 0x80206927

///|
pub const SIOCDELMULTI = 0x80206932

///|
pub const SIOCDIFADDR = 0x80206919

///|
pub const SIOCDIFPHYADDR = 0x80206941

///|
pub const SIOCGDRVSPEC = 0xc028697b

///|
pub const SIOCGETVLAN = 0xc020697f

///|
pub const SIOCGHIWAT = 0x40047301

///|
pub const SIOCGIFADDR = 0xc0206921

///|
pub const SIOCGIFALTMTU = 0xc0206948

///|
pub const SIOCGIFASYNCMAP = 0xc020697c

///|
pub const SIOCGIFBOND = 0xc0206947

///|
pub const SIOCGIFBRDADDR = 0xc0206923

///|
pub const SIOCGIFCAP = 0xc020695b

///|
pub const SIOCGIFCONF = 0xc00c6924

///|
pub const SIOCGIFDEVMTU = 0xc0206944

///|
pub const SIOCGIFDSTADDR = 0xc0206922

///|
pub const SIOCGIFFLAGS = 0xc0206911

///|
pub const SIOCGIFGENERIC = 0xc020693a

///|
pub const SIOCGIFKPI = 0xc0206987

///|
pub const SIOCGIFMAC = 0xc0206982

///|
pub const SIOCGIFMEDIA = 0xc02c6938

///|
pub const SIOCGIFMETRIC = 0xc0206917

///|
pub const SIOCGIFMTU = 0xc0206933

///|
pub const SIOCGIFNETMASK = 0xc0206925

///|
pub const SIOCGIFPDSTADDR = 0xc0206940

///|
pub const SIOCGIFPHYS = 0xc0206935

///|
pub const SIOCGIFPSRCADDR = 0xc020693f

///|
pub const SIOCGIFSTATUS = 0xc331693d

///|
pub const SIOCGIFVLAN = 0xc020697f

///|
pub const SIOCGIFWAKEFLAGS = 0xc0206988

///|
pub const SIOCGLOWAT = 0x40047303

///|
pub const SIOCGPGRP = 0x40047309

///|
pub const SIOCIFCREATE = 0xc0206978

///|
pub const SIOCIFCREATE2 = 0xc020697a

///|
pub const SIOCIFDESTROY = 0x80206979

///|
pub const SIOCIFGCLONERS = 0xc0106981

///|
pub const SIOCRSLVMULTI = 0xc010693b

///|
pub const SIOCSDRVSPEC = 0x8028697b

///|
pub const SIOCSETVLAN = 0x8020697e

///|
pub const SIOCSHIWAT = 0x80047300

///|
pub const SIOCSIFADDR = 0x8020690c

///|
pub const SIOCSIFALTMTU = 0x80206945

///|
pub const SIOCSIFASYNCMAP = 0x8020697d

///|
pub const SIOCSIFBOND = 0x80206946

///|
pub const SIOCSIFBRDADDR = 0x80206913

///|
pub const SIOCSIFCAP = 0x8020695a

///|
pub const SIOCSIFDSTADDR = 0x8020690e

///|
pub const SIOCSIFFLAGS = 0x80206910

///|
pub const SIOCSIFGENERIC = 0x80206939

///|
pub const SIOCSIFKPI = 0x80206986

///|
pub const SIOCSIFLLADDR = 0x8020693c

///|
pub const SIOCSIFMAC = 0x80206983

///|
pub const SIOCSIFMEDIA = 0xc0206937

///|
pub const SIOCSIFMETRIC = 0x80206918

///|
pub const SIOCSIFMTU = 0x80206934

///|
pub const SIOCSIFNETMASK = 0x80206916

///|
pub const SIOCSIFPHYADDR = 0x8040693e

///|
pub const SIOCSIFPHYS = 0x80206936

///|
pub const SIOCSIFVLAN = 0x8020697e

///|
pub const SIOCSLOWAT = 0x80047302

///|
pub const SIOCSPGRP = 0x80047308

///|
pub const SOCK_DGRAM = 0x2

///|
pub const SOCK_MAXADDRLEN = 0xff

///|
pub const SOCK_RAW = 0x3

///|
pub const SOCK_RDM = 0x4

///|
pub const SOCK_SEQPACKET = 0x5

///|
pub const SOCK_STREAM = 0x1

///|
pub const SOL_SOCKET = 0xffff

///|
pub const SOMAXCONN = 0x80

///|
pub const SO_ACCEPTCONN = 0x2

///|
pub const SO_BROADCAST = 0x20

///|
pub const SO_DEBUG = 0x1

///|
pub const SO_DONTROUTE = 0x10

///|
pub const SO_DONTTRUNC = 0x2000

///|
pub const SO_ERROR = 0x1007

///|
pub const SO_KEEPALIVE = 0x8

///|
pub const SO_LABEL = 0x1010

///|
pub const SO_LINGER = 0x80

///|
pub const SO_LINGER_SEC = 0x1080

///|
pub const SO_NKE = 0x1021

///|
pub const SO_NOADDRERR = 0x1023

///|
pub const SO_NOSIGPIPE = 0x1022

///|
pub const SO_NOTIFYCONFLICT = 0x1026

///|
pub const SO_NP_EXTENSIONS = 0x1083

///|
pub const SO_NREAD = 0x1020

///|
pub const SO_NUMRCVPKT = 0x1112

///|
pub const SO_NWRITE = 0x1024

///|
pub const SO_OOBINLINE = 0x100

///|
pub const SO_PEERLABEL = 0x1011

///|
pub const SO_RANDOMPORT = 0x1082

///|
pub const SO_RCVBUF = 0x1002

///|
pub const SO_RCVLOWAT = 0x1004

///|
pub const SO_RCVTIMEO = 0x1006

///|
pub const SO_REUSEADDR = 0x4

///|
pub const SO_REUSEPORT = 0x200

///|
pub const SO_REUSESHAREUID = 0x1025

///|
pub const SO_SNDBUF = 0x1001

///|
pub const SO_SNDLOWAT = 0x1003

///|
pub const SO_SNDTIMEO = 0x1005

///|
pub const SO_TIMESTAMP = 0x400

///|
pub const SO_TIMESTAMP_MONOTONIC = 0x800

///|
pub const SO_TYPE = 0x1008

///|
pub const SO_UPCALLCLOSEWAIT = 0x1027

///|
pub const SO_USELOOPBACK = 0x40

///|
pub const SO_WANTMORE = 0x4000

///|
pub const SO_WANTOOBFLAG = 0x8000

///|
pub const S_IEXEC = 0x40

///|
pub const S_IFBLK = 0x6000

///|
pub const S_IFCHR = 0x2000

///|
pub const S_IFDIR = 0x4000

///|
pub const S_IFIFO = 0x1000

///|
pub const S_IFLNK = 0xa000

///|
pub const S_IFMT = 0xf000

///|
pub const S_IFREG = 0x8000

///|
pub const S_IFSOCK = 0xc000

///|
pub const S_IFWHT = 0xe000

///|
pub const S_IREAD = 0x100

///|
pub const S_IRGRP = 0x20

///|
pub const S_IROTH = 0x4

///|
pub const S_IRUSR = 0x100

///|
pub const S_IRWXG = 0x38

///|
pub const S_IRWXO = 0x7

///|
pub const S_IRWXU = 0x1c0

///|
pub const S_ISGID = 0x400

///|
pub const S_ISTXT = 0x200

///|
pub const S_ISUID = 0x800

///|
pub const S_ISVTX = 0x200

///|
pub const S_IWGRP = 0x10

///|
pub const S_IWOTH = 0x2

///|
pub const S_IWRITE = 0x80

///|
pub const S_IWUSR = 0x80

///|
pub const S_IXGRP = 0x8

///|
pub const S_IXOTH = 0x1

///|
pub const S_IXUSR = 0x40

///|
pub const TCIFLUSH = 0x1

///|
pub const TCIOFLUSH = 0x3

///|
pub const TCOFLUSH = 0x2

///|
pub const TCP_CONNECTIONTIMEOUT = 0x20

///|
pub const TCP_ENABLE_ECN = 0x104

///|
pub const TCP_KEEPALIVE = 0x10

///|
pub const TCP_KEEPCNT = 0x102

///|
pub const TCP_KEEPINTVL = 0x101

///|
pub const TCP_MAXHLEN = 0x3c

///|
pub const TCP_MAXOLEN = 0x28

///|
pub const TCP_MAXSEG = 0x2

///|
pub const TCP_MAXWIN = 0xffff

///|
pub const TCP_MAX_SACK = 0x4

///|
pub const TCP_MAX_WINSHIFT = 0xe

///|
pub const TCP_MINMSS = 0xd8

///|
pub const TCP_MSS = 0x200

///|
pub const TCP_NODELAY = 0x1

///|
pub const TCP_NOOPT = 0x8

///|
pub const TCP_NOPUSH = 0x4

///|
pub const TCP_NOTSENT_LOWAT = 0x201

///|
pub const TCP_RXT_CONNDROPTIME = 0x80

///|
pub const TCP_RXT_FINDROP = 0x100

///|
pub const TCP_SENDMOREACKS = 0x103

///|
pub const TCSAFLUSH = 0x2

///|
pub const TIOCCBRK = 0x2000747a

///|
pub const TIOCCDTR = 0x20007478

///|
pub const TIOCCONS = 0x80047462

///|
pub const TIOCDCDTIMESTAMP = 0x40107458

///|
pub const TIOCDRAIN = 0x2000745e

///|
pub const TIOCDSIMICROCODE = 0x20007455

///|
pub const TIOCEXCL = 0x2000740d

///|
pub const TIOCEXT = 0x80047460

///|
pub const TIOCFLUSH = 0x80047410

///|
pub const TIOCGDRAINWAIT = 0x40047456

///|
pub const TIOCGETA = 0x40487413

///|
pub const TIOCGETD = 0x4004741a

///|
pub const TIOCGPGRP = 0x40047477

///|
pub const TIOCGWINSZ = 0x40087468

///|
pub const TIOCIXOFF = 0x20007480

///|
pub const TIOCIXON = 0x20007481

///|
pub const TIOCMBIC = 0x8004746b

///|
pub const TIOCMBIS = 0x8004746c

///|
pub const TIOCMGDTRWAIT = 0x4004745a

///|
pub const TIOCMGET = 0x4004746a

///|
pub const TIOCMODG = 0x40047403

///|
pub const TIOCMODS = 0x80047404

///|
pub const TIOCMSDTRWAIT = 0x8004745b

///|
pub const TIOCMSET = 0x8004746d

///|
pub const TIOCM_CAR = 0x40

///|
pub const TIOCM_CD = 0x40

///|
pub const TIOCM_CTS = 0x20

///|
pub const TIOCM_DSR = 0x100

///|
pub const TIOCM_DTR = 0x2

///|
pub const TIOCM_LE = 0x1

///|
pub const TIOCM_RI = 0x80

///|
pub const TIOCM_RNG = 0x80

///|
pub const TIOCM_RTS = 0x4

///|
pub const TIOCM_SR = 0x10

///|
pub const TIOCM_ST = 0x8

///|
pub const TIOCNOTTY = 0x20007471

///|
pub const TIOCNXCL = 0x2000740e

///|
pub const TIOCOUTQ = 0x40047473

///|
pub const TIOCPKT = 0x80047470

///|
pub const TIOCPKT_DATA = 0x0

///|
pub const TIOCPKT_DOSTOP = 0x20

///|
pub const TIOCPKT_FLUSHREAD = 0x1

///|
pub const TIOCPKT_FLUSHWRITE = 0x2

///|
pub const TIOCPKT_IOCTL = 0x40

///|
pub const TIOCPKT_NOSTOP = 0x10

///|
pub const TIOCPKT_START = 0x8

///|
pub const TIOCPKT_STOP = 0x4

///|
pub const TIOCPTYGNAME = 0x40807453

///|
pub const TIOCPTYGRANT = 0x20007454

///|
pub const TIOCPTYUNLK = 0x20007452

///|
pub const TIOCREMOTE = 0x80047469

///|
pub const TIOCSBRK = 0x2000747b

///|
pub const TIOCSCONS = 0x20007463

///|
pub const TIOCSCTTY = 0x20007461

///|
pub const TIOCSDRAINWAIT = 0x80047457

///|
pub const TIOCSDTR = 0x20007479

///|
pub const TIOCSETA = 0x80487414

///|
pub const TIOCSETAF = 0x80487416

///|
pub const TIOCSETAW = 0x80487415

///|
pub const TIOCSETD = 0x8004741b

///|
pub const TIOCSIG = 0x2000745f

///|
pub const TIOCSPGRP = 0x80047476

///|
pub const TIOCSTART = 0x2000746e

///|
pub const TIOCSTAT = 0x20007465

///|
pub const TIOCSTI = 0x80017472

///|
pub const TIOCSTOP = 0x2000746f

///|
pub const TIOCSWINSZ = 0x80087467

///|
pub const TIOCTIMESTAMP = 0x40107459

///|
pub const TIOCUCNTL = 0x80047466

///|
pub const TOSTOP = 0x400000

///|
pub const VDISCARD = 0xf

///|
pub const VDSUSP = 0xb

///|
pub const VEOF = 0x0

///|
pub const VEOL = 0x1

///|
pub const VEOL2 = 0x2

///|
pub const VERASE = 0x3

///|
pub const VINTR = 0x8

///|
pub const VKILL = 0x5

///|
pub const VLNEXT = 0xe

///|
pub const VMIN = 0x10

///|
pub const VQUIT = 0x9

///|
pub const VREPRINT = 0x6

///|
pub const VSTART = 0xc

///|
pub const VSTATUS = 0x12

///|
pub const VSTOP = 0xd

///|
pub const VSUSP = 0xa

///|
pub const VT0 = 0x0

///|
pub const VT1 = 0x10000

///|
pub const VTDLY = 0x10000

///|
pub const VTIME = 0x11

///|
pub const VWERASE = 0x4

///|
pub const WCONTINUED = 0x10

///|
pub const WCOREFLAG = 0x80

///|
pub const WEXITED = 0x4

///|
pub const WNOHANG = 0x1

///|
pub const WNOWAIT = 0x20

///|
pub const WORDSIZE = 0x40

///|
pub const WSTOPPED = 0x8

///|
pub const WUNTRACED = 0x2

///|
pub suberror Errno {
  E2BIG
  EACCES
  EADDRINUSE
  EADDRNOTAVAIL
  EAFNOSUPPORT
  EAGAIN
  EALREADY
  EAUTH
  EBADARCH
  EBADEXEC
  EBADF
  EBADMACHO
  EBADMSG
  EBADRPC
  EBUSY
  ECANCELED
  ECHILD
  ECONNABORTED
  ECONNREFUSED
  ECONNRESET
  EDEADLK
  EDESTADDRREQ
  EDEVERR
  EDOM
  EDQUOT
  EEXIST
  EFAULT
  EFBIG
  EFTYPE
  EHOSTDOWN
  EHOSTUNREACH
  EIDRM
  EILSEQ
  EINPROGRESS
  EINTR
  EINVAL
  EIO
  EISCONN
  EISDIR
  ELAST
  ELOOP
  EMFILE
  EMLINK
  EMSGSIZE
  EMULTIHOP
  ENAMETOOLONG
  ENEEDAUTH
  ENETDOWN
  ENETRESET
  ENETUNREACH
  ENFILE
  ENOATTR
  ENOBUFS
  ENODATA
  ENODEV
  ENOENT
  ENOEXEC
  ENOLCK
  ENOLINK
  ENOMEM
  ENOMSG
  ENOPOLICY
  ENOPROTOOPT
  ENOSPC
  ENOSR
  ENOSTR
  ENOSYS
  ENOTBLK
  ENOTCONN
  ENOTDIR
  ENOTEMPTY
  ENOTRECOVERABLE
  ENOTSOCK
  ENOTSUP
  ENOTTY
  ENXIO
  EOPNOTSUPP
  EOVERFLOW
  EOWNERDEAD
  EPERM
  EPFNOSUPPORT
  EPIPE
  EPROCLIM
  EPROCUNAVAIL
  EPROGMISMATCH
  EPROGUNAVAIL
  EPROTO
  EPROTONOSUPPORT
  EPROTOTYPE
  EPWROFF
  EQFULL
  ERANGE
  EREMOTE
  EROFS
  ERPCMISMATCH
  ESHLIBVERS
  ESHUTDOWN
  ESOCKTNOSUPPORT
  ESPIPE
  ESRCH
  ESTALE
  ETIME
  ETIMEDOUT
  ETOOMANYREFS
  ETXTBSY
  EUSERS
  EWOULDBLOCK
  EXDEV
  UNKNOWN(UInt64)
}

///|
pub fn Errno::to_uint64(self : Errno) -> UInt64 {
  match self {
    EPERM => 0x1
    ENOENT => 0x2
    ESRCH => 0x3
    E2BIG => 0x7
    EACCES => 0xd
    EADDRINUSE => 0x30
    EADDRNOTAVAIL => 0x31
    EAFNOSUPPORT => 0x2f
    EAGAIN => 0x23
    EALREADY => 0x25
    EAUTH => 0x50
    EBADARCH => 0x56
    EBADEXEC => 0x55
    EBADF => 0x9
    EBADMACHO => 0x58
    EBADMSG => 0x5e
    EBADRPC => 0x48
    EBUSY => 0x10
    ECANCELED => 0x59
    ECHILD => 0xa
    ECONNABORTED => 0x35
    ECONNREFUSED => 0x3d
    ECONNRESET => 0x36
    EDEADLK => 0xb
    EDESTADDRREQ => 0x27
    EDEVERR => 0x53
    EDOM => 0x21
    EDQUOT => 0x45
    EEXIST => 0x11
    EFAULT => 0xe
    EFBIG => 0x1b
    EFTYPE => 0x4f
    EHOSTDOWN => 0x40
    EHOSTUNREACH => 0x41
    EIDRM => 0x5a
    EILSEQ => 0x5c
    EINPROGRESS => 0x24
    EINTR => 0x4
    EINVAL => 0x16
    EIO => 0x5
    EISCONN => 0x38
    EISDIR => 0x15
    ELAST => 0x6a
    ELOOP => 0x3e
    EMFILE => 0x18
    EMLINK => 0x1f
    EMSGSIZE => 0x28
    EMULTIHOP => 0x5f
    ENAMETOOLONG => 0x3f
    ENEEDAUTH => 0x51
    ENETDOWN => 0x32
    ENETRESET => 0x34
    ENETUNREACH => 0x33
    ENFILE => 0x17
    ENOATTR => 0x5d
    ENOBUFS => 0x37
    ENODATA => 0x60
    ENODEV => 0x13
    ENOEXEC => 0x8
    ENOLCK => 0x4d
    ENOLINK => 0x61
    ENOMEM => 0xc
    ENOMSG => 0x5b
    ENOPOLICY => 0x67
    ENOPROTOOPT => 0x2a
    ENOSPC => 0x1c
    ENOSR => 0x62
    ENOSTR => 0x63
    ENOSYS => 0x4e
    ENOTBLK => 0xf
    ENOTCONN => 0x39
    ENOTDIR => 0x14
    ENOTEMPTY => 0x42
    ENOTRECOVERABLE => 0x68
    ENOTSOCK => 0x26
    ENOTSUP => 0x2d
    ENOTTY => 0x19
    ENXIO => 0x6
    EOPNOTSUPP => 0x66
    EOVERFLOW => 0x54
    EOWNERDEAD => 0x69
    EPFNOSUPPORT => 0x2e
    EPIPE => 0x20
    EPROCLIM => 0x43
    EPROCUNAVAIL => 0x4c
    EPROGMISMATCH => 0x4b
    EPROGUNAVAIL => 0x4a
    EPROTO => 0x64
    EPROTONOSUPPORT => 0x2b
    EPROTOTYPE => 0x29
    EPWROFF => 0x52
    EQFULL => 0x6a
    ERANGE => 0x22
    EREMOTE => 0x47
    EROFS => 0x1e
    ERPCMISMATCH => 0x49
    ESHLIBVERS => 0x57
    ESHUTDOWN => 0x3a
    ESOCKTNOSUPPORT => 0x2c
    ESPIPE => 0x1d
    ESTALE => 0x46
    ETIME => 0x65
    ETIMEDOUT => 0x3c
    ETOOMANYREFS => 0x3b
    ETXTBSY => 0x1a
    EUSERS => 0x44
    EWOULDBLOCK => 0x23
    EXDEV => 0x12
    UNKNOWN(code) => code
  }
}

///|
pub fn Errno::of_int(errno : Int) -> Errno {
  match errno {
    0x1 => EPERM
    0x2 => ENOENT
    0x3 => ESRCH
    0x7 => E2BIG
    0xd => EACCES
    0x30 => EADDRINUSE
    0x31 => EADDRNOTAVAIL
    0x2f => EAFNOSUPPORT
    0x23 => EAGAIN
    0x25 => EALREADY
    0x50 => EAUTH
    0x56 => EBADARCH
    0x55 => EBADEXEC
    0x9 => EBADF
    0x58 => EBADMACHO
    0x5e => EBADMSG
    0x48 => EBADRPC
    0x10 => EBUSY
    0x59 => ECANCELED
    0xa => ECHILD
    0x35 => ECONNABORTED
    0x3d => ECONNREFUSED
    0x36 => ECONNRESET
    0xb => EDEADLK
    0x27 => EDESTADDRREQ
    0x53 => EDEVERR
    0x21 => EDOM
    0x45 => EDQUOT
    0x11 => EEXIST
    0xe => EFAULT
    0x1b => EFBIG
    0x4f => EFTYPE
    0x40 => EHOSTDOWN
    0x41 => EHOSTUNREACH
    0x5a => EIDRM
    0x5c => EILSEQ
    0x24 => EINPROGRESS
    0x4 => EINTR
    0x16 => EINVAL
    0x5 => EIO
    0x38 => EISCONN
    0x15 => EISDIR
    0x6a => ELAST
    0x3e => ELOOP
    0x18 => EMFILE
    0x1f => EMLINK
    0x28 => EMSGSIZE
    0x5f => EMULTIHOP
    0x3f => ENAMETOOLONG
    0x51 => ENEEDAUTH
    0x32 => ENETDOWN
    0x34 => ENETRESET
    0x33 => ENETUNREACH
    0x17 => ENFILE
    0x5d => ENOATTR
    0x37 => ENOBUFS
    0x60 => ENODATA
    0x13 => ENODEV
    0x8 => ENOEXEC
    0x4d => ENOLCK
    0x61 => ENOLINK
    0xc => ENOMEM
    0x5b => ENOMSG
    0x67 => ENOPOLICY
    0x2a => ENOPROTOOPT
    0x1c => ENOSPC
    0x62 => ENOSR
    0x63 => ENOSTR
    0x4e => ENOSYS
    0xf => ENOTBLK
    0x39 => ENOTCONN
    0x14 => ENOTDIR
    0x42 => ENOTEMPTY
    0x68 => ENOTRECOVERABLE
    0x26 => ENOTSOCK
    0x2d => ENOTSUP
    0x19 => ENOTTY
    0x6 => ENXIO
    0x66 => EOPNOTSUPP
    0x54 => EOVERFLOW
    0x69 => EOWNERDEAD
    0x2e => EPFNOSUPPORT
    0x20 => EPIPE
    0x43 => EPROCLIM
    0x4c => EPROCUNAVAIL
    0x4b => EPROGMISMATCH
    0x4a => EPROGUNAVAIL
    0x64 => EPROTO
    0x2b => EPROTONOSUPPORT
    0x29 => EPROTOTYPE
    0x52 => EPWROFF
    0x6a => EQFULL
    0x22 => ERANGE
    0x47 => EREMOTE
    0x1e => EROFS
    0x49 => ERPCMISMATCH
    0x57 => ESHLIBVERS
    0x3a => ESHUTDOWN
    0x2c => ESOCKTNOSUPPORT
    0x1d => ESPIPE
    0x46 => ESTALE
    0x65 => ETIME
    0x3c => ETIMEDOUT
    0x3b => ETOOMANYREFS
    0x1a => ETXTBSY
    0x44 => EUSERS
    0x23 => EWOULDBLOCK
    0x12 => EXDEV
    code => UNKNOWN(code.to_uint64())
  }
}

// Error table

///|
let errors : Map[UInt64, String] = {
  1: "operation not permitted",
  2: "no such file or directory",
  3: "no such process",
  4: "interrupted system call",
  5: "input/output error",
  6: "device not configured",
  7: "argument list too long",
  8: "exec format error",
  9: "bad file descriptor",
  10: "no child processes",
  11: "resource deadlock avoided",
  12: "cannot allocate memory",
  13: "permission denied",
  14: "bad address",
  15: "block device required",
  16: "resource busy",
  17: "file exists",
  18: "cross-device link",
  19: "operation not supported by device",
  20: "not a directory",
  21: "is a directory",
  22: "invalid argument",
  23: "too many open files in system",
  24: "too many open files",
  25: "inappropriate ioctl for device",
  26: "text file busy",
  27: "file too large",
  28: "no space left on device",
  29: "illegal seek",
  30: "read-only file system",
  31: "too many links",
  32: "broken pipe",
  33: "numerical argument out of domain",
  34: "result too large",
  35: "resource temporarily unavailable",
  36: "operation now in progress",
  37: "operation already in progress",
  38: "socket operation on non-socket",
  39: "destination address required",
  40: "message too long",
  41: "protocol wrong type for socket",
  42: "protocol not available",
  43: "protocol not supported",
  44: "socket type not supported",
  45: "operation not supported",
  46: "protocol family not supported",
  47: "address family not supported by protocol family",
  48: "address already in use",
  49: "can't assign requested address",
  50: "network is down",
  51: "network is unreachable",
  52: "network dropped connection on reset",
  53: "software caused connection abort",
  54: "connection reset by peer",
  55: "no buffer space available",
  56: "socket is already connected",
  57: "socket is not connected",
  58: "can't send after socket shutdown",
  59: "too many references: can't splice",
  60: "operation timed out",
  61: "connection refused",
  62: "too many levels of symbolic links",
  63: "file name too long",
  64: "host is down",
  65: "no route to host",
  66: "directory not empty",
  67: "too many processes",
  68: "too many users",
  69: "disc quota exceeded",
  70: "stale NFS file handle",
  71: "too many levels of remote in path",
  72: "RPC struct is bad",
  73: "RPC version wrong",
  74: "RPC prog. not avail",
  75: "program version wrong",
  76: "bad procedure for program",
  77: "no locks available",
  78: "function not implemented",
  79: "inappropriate file type or format",
  80: "authentication error",
  81: "need authenticator",
  82: "device power is off",
  83: "device error",
  84: "value too large to be stored in data type",
  85: "bad executable (or shared library)",
  86: "bad CPU type in executable",
  87: "shared library version mismatch",
  88: "malformed Mach-o file",
  89: "operation canceled",
  90: "identifier removed",
  91: "no message of desired type",
  92: "illegal byte sequence",
  93: "attribute not found",
  94: "bad message",
  95: "EMULTIHOP (Reserved)",
  96: "no message available on STREAM",
  97: "ENOLINK (Reserved)",
  98: "no STREAM resources",
  99: "not a STREAM",
  100: "protocol error",
  101: "STREAM ioctl timeout",
  102: "operation not supported on socket",
  103: "policy not found",
  104: "state not recoverable",
  105: "previous owner died",
  106: "interface output queue is full",
}

///|
pub impl Show for Errno with output(self : Errno, logger : &Logger) -> Unit {
  let code = self.to_uint64()
  match errors.get(code) {
    Some(s) => logger.write_string(s)
    None => {
      logger.write_string("errno ")
      logger.write_object(code)
    }
  }
}

///|
pub fn Errno::is_(self : Errno, target : Error) -> Bool {
  match target {
    @oserror.Permission => self is (EACCES | EPERM)
    @oserror.Exist => self is (EEXIST | ENOTEMPTY)
    @oserror.NotExist => self is ENOENT
    _ => false
  }
}

///|
pub fn Errno::temporary(self : Errno) -> Bool {
  return self is (EINTR | EMFILE | ENFILE) || self.timeout()
}

///|
pub fn Errno::timeout(self : Errno) -> Bool {
  return self is (EAGAIN | EWOULDBLOCK | ETIMEDOUT)
}

///|
enum Signal {
  SIGABRT
  SIGALRM
  SIGBUS
  SIGCHLD
  SIGCONT
  SIGEMT
  SIGFPE
  SIGHUP
  SIGILL
  SIGINFO
  SIGINT
  SIGIO
  SIGIOT
  SIGKILL
  SIGPIPE
  SIGPROF
  SIGQUIT
  SIGSEGV
  SIGSTOP
  SIGSYS
  SIGTERM
  SIGTRAP
  SIGTSTP
  SIGTTIN
  SIGTTOU
  SIGURG
  SIGUSR1
  SIGUSR2
  SIGVTALRM
  SIGWINCH
  SIGXCPU
  SIGXFSZ
}

///|
pub fn Signal::to_int(self : Signal) -> Int {
  match self {
    SIGABRT => 0x6
    SIGALRM => 0xe
    SIGBUS => 0xa
    SIGCHLD => 0x14
    SIGCONT => 0x13
    SIGEMT => 0x7
    SIGFPE => 0x8
    SIGHUP => 0x1
    SIGILL => 0x4
    SIGINFO => 0x1d
    SIGINT => 0x2
    SIGIO => 0x17
    SIGIOT => 0x6
    SIGKILL => 0x9
    SIGPIPE => 0xd
    SIGPROF => 0x1b
    SIGQUIT => 0x3
    SIGSEGV => 0xb
    SIGSTOP => 0x11
    SIGSYS => 0xc
    SIGTERM => 0xf
    SIGTRAP => 0x5
    SIGTSTP => 0x12
    SIGTTIN => 0x15
    SIGTTOU => 0x16
    SIGURG => 0x10
    SIGUSR1 => 0x1e
    SIGUSR2 => 0x1f
    SIGVTALRM => 0x1a
    SIGWINCH => 0x1c
    SIGXCPU => 0x18
    SIGXFSZ => 0x19
  }
}

///|
let signals : Map[Int, String] = {
  1: "hangup",
  2: "interrupt",
  3: "quit",
  4: "illegal instruction",
  5: "trace/BPT trap",
  6: "abort trap",
  7: "EMT trap",
  8: "floating point exception",
  9: "killed",
  10: "bus error",
  11: "segmentation fault",
  12: "bad system call",
  13: "broken pipe",
  14: "alarm clock",
  15: "terminated",
  16: "urgent I/O condition",
  17: "suspended (signal)",
  18: "suspended",
  19: "continued",
  20: "child exited",
  21: "stopped (tty input)",
  22: "stopped (tty output)",
  23: "I/O possible",
  24: "cputime limit exceeded",
  25: "filesize limit exceeded",
  26: "virtual timer expired",
  27: "profiling timer expired",
  28: "window size changes",
  29: "information request",
  30: "user defined signal 1",
  31: "user defined signal 2",
}

///|
pub impl Show for Signal with output(self : Signal, logger : &Logger) -> Unit {
  let code = self.to_int()
  match signals.get(code) {
    Some(s) => logger.write_string(s)
    None => {
      logger.write_string("signal ")
      logger.write_object(code)
    }
  }
}
