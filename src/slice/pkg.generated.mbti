// Generated using `moon info`, DON'T EDIT IT
package "tonyfettes/go/slice"

// Values
fn[T] array(FixedArray[T], start? : Int, end? : Int) -> Slice[T]

fn bytes(Bytes, start? : Int, end? : Int) -> Slice[Byte]

fn[T : Default] make(Int) -> Slice[T]

fn[T] new() -> Slice[T]

// Errors

// Types and methods
type Slice[T]
fn[T : Default] Slice::append(Self[T], T) -> Self[T]
fn[T] Slice::arrayview(Self[T]) -> ArrayView[T]
fn[T] Slice::buffer(Self[T]) -> FixedArray[T]
fn Slice::bytesview(Self[Byte]) -> BytesView
fn[T] Slice::copy(Self[T], Self[T]) -> Int
fn[T] Slice::iter(Self[T]) -> Iter[T]
fn[T] Slice::length(Self[T]) -> Int
fn[T] Slice::offset(Self[T]) -> Int
fn[T] Slice::op_as_view(Self[T], start? : Int, end? : Int) -> Self[T]
fn[T] Slice::op_get(Self[T], Int) -> T
fn[T] Slice::op_set(Self[T], Int, T) -> Unit
impl[T] Default for Slice[T]
impl[T : Eq] Eq for Slice[T]
impl[T : Show] Show for Slice[T]
impl[T : ToJson] ToJson for Slice[T]

// Type aliases

// Traits

