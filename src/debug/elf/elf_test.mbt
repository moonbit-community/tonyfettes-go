///|
/// Basic test for ELF constants and types
test "elf constants" {
  // Test Version enum
  @json.inspect(Version::EV_CURRENT.to_byte(), content=1)
  @json.inspect(Version::from_byte(1), content="EV_CURRENT")

  // Test Class enum
  @json.inspect(Class::ELFCLASS64.to_int(), content=2)
  @json.inspect(Class::from_int(2), content="ELFCLASS64")

  // Test Data enum
  @json.inspect(Data::ELFDATA2LSB.to_byte(), content=1)
  @json.inspect(Data::from_byte(1), content="ELFDATA2LSB")

  // Test Machine enum
  @json.inspect(Machine::EM_X86_64.to_int(), content=62)
  @json.inspect(Machine::from_int(62), content="EM_X86_64")

  // Test Type enum
  @json.inspect(Type::ET_EXEC.to_int(), content=2)
  @json.inspect(Type::from_int(2), content="ET_EXEC")
}

///|
test "version index operations" {
  let vi = VersionIndex::new(0x8001)
  @json.inspect(vi.is_hidden(), content=true)
  @json.inspect(vi.index(), content=1)
  let vi2 = VersionIndex::new(0x1)
  @json.inspect(vi2.is_hidden(), content=false)
  @json.inspect(vi2.index(), content=1)
}

///|
test "magic constant" {
  @json.inspect(ELFMAG.to_array(), content=[127, 69, 76, 70])
}

///|
test "section types" {
  @json.inspect(SectionType::SHT_PROGBITS.to_uint(), content=1)
  @json.inspect(SectionType::from_uint(1), content="SHT_PROGBITS")
  @json.inspect(SectionType::SHT_SYMTAB.to_uint(), content=2)
  @json.inspect(SectionType::from_uint(2), content="SHT_SYMTAB")
}

///|
test "program types" {
  @json.inspect(ProgType::PT_LOAD.to_int(), content=1)
  @json.inspect(ProgType::from_int(1), content="PT_LOAD")
  @json.inspect(ProgType::PT_DYNAMIC.to_int(), content=2)
  @json.inspect(ProgType::from_int(2), content="PT_DYNAMIC")
}

///|
test "compression types" {
  @json.inspect(CompressionType::COMPRESS_ZLIB.to_int(), content=1)
  @json.inspect(CompressionType::from_int(1), content="COMPRESS_ZLIB")
  @json.inspect(CompressionType::COMPRESS_ZSTD.to_int(), content=2)
  @json.inspect(CompressionType::from_int(2), content="COMPRESS_ZSTD")
}
