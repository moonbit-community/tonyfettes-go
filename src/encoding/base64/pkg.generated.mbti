// Generated using `moon info`, DON'T EDIT IT
package "tonyfettes/go/encoding/base64"

import(
  "tonyfettes/go/io"
  "tonyfettes/go/slice"
)

// Values
const StdPadding : Char = '='

fn new_decoder(Encoding, &@io.Reader) -> &@io.Reader

fn new_encoding(Bytes) -> Encoding

let std_encoding : Encoding

let url_encoding : Encoding

// Errors
type CorruptInputError
impl Show for CorruptInputError

// Types and methods
pub struct Encoding {
  encode : FixedArray[Byte]
  decode_map : FixedArray[Byte]
  pad_char : Char?
  strict : Bool
}
fn Encoding::decode(Self, @slice.Slice[Byte], @slice.Slice[Byte]) -> Int raise

// Type aliases

// Traits

